---

- name: Prepare server to work with ansible
  hosts: all
  gather_facts: False
  become: true
  
  tasks:
    - name: install python 2
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

- name: Upgrade packages 
  hosts: all
  become: yes

  tasks:
    - name: Update all packages to the latest version
      apt:
        upgrade: dist

- name: Create users
  hosts: all
  become: yes

  tasks:
    - name: Create user deploy
      user: name=deploy shell=/bin/bash groups=sudo
    
- name: Install rbenv
  hosts: all
  become: yes

  tasks:
    - name: Install rbenv
      apt:
        name: rbenv
        state: present
        update_cache: yes
    
    - name: Install packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items: 
        - build-essential
        - libssl-dev
        - libreadline-dev

- name: Configure rbenv
  hosts: all
  become: yes
  become_user: deploy
  tags:
    - rbenv

  tasks:
    - name: Rbenv initialization
      #shell: "echo 'eval \"$(rbenv init -)\"' >> ~/.bash_profile"
      lineinfile:
        path: ~/.bashrc
        # Identificar la linea
        regexp: eval "\$\(rbenv init -\)"
        # Contenido de la linea
        line: eval "$(rbenv init -)"
        # Donde lo vamos a insertar
        insertafter: EOF

    - name: Install ruby-build plugins
      git:
        repo: 'https://github.com/rbenv/ruby-build.git'
        dest: "~/.rbenv/plugins/ruby-build"

    - name: Install ruby 2.4.0
      command: rbenv install 2.4.0
      args:
        creates: "~/.rbenv/versions/2.4.0"

    - name: Make 2.4.0 global
      command: rbenv global 2.4.0

    - name: Install bundler
      shell: eval "$(/usr/bin/rbenv init -)" && gem install bundler
      args:
        executable: /bin/bash
        creates: "~/.rbenv/versions/2.4.0/bin/bundler"

    - name: Rehash bundler
      command: rbenv rehash

- name: Install nginx and passenger
  hosts: all
  become: yes
  become_user: root
  tags:
    - nginx
    - passenger

  tasks:
    # sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
    - name: Add repository key
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 561F9B9CAC40B2F7
        state: present

    # sudo apt-get install -y apt-transport-https ca-certificates
    - name: Install required packages
      apt:
        name: ['apt-transport-https', 'ca-certificates']
        state: present
        update_cache: yes

    # sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main > /etc/apt/sources.list.d/passenger.list'
    - name: Add Passenger APT repository
      apt_repository:
        repo: deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main
        state: present
        
    # sudo apt-get install -y nginx-extras passenger
    - name: Install Passenger & Nginx
      apt:
        name: ['nginx-extras', 'passenger']
        state: present
        update_cache: yes

- name: Configure nginx and passenger
  hosts: all
  become: yes
  become_user: root
  tags:
    - nginx
    - passenger       
    
  tasks:
    - name: Include passenger configuration in nginx
      lineinfile:
        path: /etc/nginx/nginx.conf
        regexp: include \/etc\/nginx\/passenger\.conf;
        line: include /etc/nginx/passenger.conf;
        insertafter: EOF

    - name: Set correct ruby version in passenger
      lineinfile:
        path: /etc/nginx/passenger.conf
        regexp: passenger_ruby .*
        line: passenger_ruby /home/deploy/.rbenv/shims/ruby;
        insertafter: EOF

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

- name: Install MySql
  hosts: all
  become: yes
  become_user: root
  tags:
    - mysql

  tasks:
    # sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password 1234'
    - name: Set MySQL root password
      debconf:
        name: mysql-server
        question: mysql-server/root_password
        value: 1234
        vtype: password

    # sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password 1234'
    - name: Set MySQL root password again
      debconf:
        name: mysql-server
        question: mysql-server/root_password_again
        value: 1234
        vtype: password

    # sudo apt-get install mysql-server mysql-client libmysqlclient-dev
    - name: Install MySQL
      apt:
        name: ['mysql-server', 'mysql-client', 'libmysqlclient-dev', 'python-mysqldb']
        state: present
        update_cache: yes

    - name: Copy mysql automatic login file
      copy:
        src: my.cnf
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: '0600'
        
- name: Install Application
  hosts: all
  become: yes
  become_user: root
  tags:
    - app

  tasks:
    - name: Clone app repository
      become_user: deploy
      git:
        repo: 'https://github.com/AlvaroMaceda/DuckRecognizer.git'
        dest: "~/DuckRecognizer"

    - name: Copy nginx host configuration
      copy:
        src: app.conf
        dest: /etc/nginx/sites-enabled/default
        owner: root
        group: root
        mode: '0644'

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

- name: Configure MySQL
  hosts: all
  become: yes
  become_user: root
  tags:
    - app
    - mysql
    
  tasks:
    - name: Create database
      mysql_db:
        name: DuckRecognizer
        state: present

    - name: Create user and give permissions to user
      mysql_user:
        name: duckuser
        password: duckuser
        priv: 'DuckRecognizer.*:ALL'
        state: present
      
- name: Configure Application
  hosts: all
  become: yes
  become_user: deploy
  tags:
    - conf
  vars:
    - db_user: duckuser
    - db_password: duckuser

  tasks:
    - name: Install required packages for gems
      become_user: root
      apt:
        name: ['libsqlite3-dev', 'passenger']
        state: present
        update_cache: yes

    - name: Install gems with bundler
      bundler:
        state: present
        executable: ~/.rbenv/shims/bundler
        chdir: /home/deploy/DuckRecognizer

    - name: Create secrets file
      template:
        src: secrets.yml.j2
        dest: ~/DuckRecognizer/config/secrets.yml
        owner: deploy
        group: deploy
        mode: '0600'

    - name: Copy mysql automatic login file
      copy:
        src: my.cnf
        dest: ~/.my.cnf
        owner: deploy
        group: deploy
        mode: '0600'

    - name: Run migrations
      shell: /home/deploy/.rbenv/shims/bundle exec rake db:migrate
      args:
        chdir: /home/deploy/DuckRecognizer


